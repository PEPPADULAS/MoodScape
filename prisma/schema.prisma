// Seasonal Thoughts Database Schema
// Stores user thoughts, experiences, and seasonal themes

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts  Account[]
  sessions  Session[]
  thoughts  Thought[]
  settings  UserSettings?
  events    Event[]
  customThemes CustomTheme[]
}

model UserSettings {
  id           String @id @default(cuid())
  userId       String @unique
  currentTheme String @default("spring")
  autoTheme    Boolean @default(true)
  themeMode    String @default("light")
  defaultFont  String? // e.g., 'inter', 'poppins', 'dancing-script'
  defaultLanguage String? // e.g., 'en', 'hi', 'bn'
  activeVisualPack String?
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Thought {
  id          String   @id @default(cuid())
  title       String?
  content     String
  mood        String?
  weather     String?
  season      String?
  tags        String?  // JSON string for tags array
  isPrivate   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  font        String? // key of the selected font
  language    String? // BCP-47 code like 'en', 'hi', 'bn'
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
  @@index([season])
}

model Event {
  id          String   @id @default(cuid())
  userId      String
  date        DateTime // date-only semantics; store at 00:00 local
  title       String
  note        String?
  notifyAt    DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([date])
}

model CustomTheme {
  id        String   @id @default(cuid())
  userId    String
  name      String
  data      String   // JSON string with colors/gradient configuration
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
